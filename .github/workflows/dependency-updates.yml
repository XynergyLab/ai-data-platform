name: Dependency Updates and Security Scanning

on:
  schedule:
    # Run weekly on Sunday at 2:00 AM
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: critical
          deny-licenses: GPL-3.0, AGPL-3.0

  python-security-scan:
    name: Python Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install safety
        run: |
          python -m pip install --upgrade pip
          pip install safety

      - name: Run Python security checks
        run: |
          find . -name "requirements.txt" -type f -exec safety check -r {} \;

  container-base-scan:
    name: Container Base Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Find Docker/Podman Compose Files
        id: find-compose
        run: |
          echo "::set-output name=compose_files::$(find . -name "*compose.yaml" -o -name "*compose.yml" | tr '\n' ' ')"

      - name: Extract Base Images from Compose Files
        run: |
          BASE_IMAGES=$(grep -h "image:" ${{ steps.find-compose.outputs.compose_files }} | sed 's/image://' | tr -d ' ' | sort -u)
          echo "Found base images:"
          echo "$BASE_IMAGES"
          echo "$BASE_IMAGES" > base_images.txt

      - name: Scan Base Images with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          input: 'base_images.txt'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'python, javascript'
          config-file: .github/security/codeql-config.yml

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

